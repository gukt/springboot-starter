debug: false
spring:
  application:
    name: springboot-starter
  profiles:
    active: dev

  # 数据库配置
  datasource:
    url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:springboot_starter_dev}?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:1234+asdf}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      # 连接池配置
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000 # 连接超时时间：30秒
      idle-timeout: 600000 # 空闲连接超时时间：10分钟
      max-lifetime: 1800000 # 连接最大生命周期：30分钟
      leak-detection-threshold: 60000 # 连接泄漏检测阈值：60秒
      connection-test-query: SELECT 1 # 连接测试查询
      pool-name: SpringBootHikariCP # 连接池名称

  # JPA 配置
  jpa:
    hibernate:
      ddl-auto: validate # 使用 Flyway，设置为 validate
    show-sql: false # 生产环境不显示 SQL
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true # 格式化 SQL
        use_sql_comments: true # 使用 SQL 注释
        jdbc.batch_size: 25 # JDBC 批处理大小
        order_inserts: true # 优化批量插入
        order_updates: true # 优化批量更新
        jdbc.fetch_size: 100 # JDBC 获取大小
        generate_statistics: false # 不生成统计信息
    open-in-view: false # 关闭 Open Session in View

  # Flyway 配置
  flyway:
    baseline-on-migrate: true
    sql-migration-separator: ;;
    placeholders:
      # 占位符配置
      db_name: ${DB_NAME:springboot_starter_dev}

  # Redis 配置
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: ${REDIS_DATABASE:0}
      timeout: 10s # 连接超时时间：10秒
      lettuce:
        # 连接池配置
        pool:
          max-active: 20 # 最大活跃连接数
          max-idle: 10 # 最大空闲连接数
          min-idle: 5 # 最小空闲连接数
          max-wait: 3000 # 最大等待时间：3秒
          time-between-eviction-runs: 60000 # 空闲连接回收间隔：60秒

  # 缓存配置
  cache:
    type: caffeine # 默认使用 Caffeine
    cache-names: user, role, permission, api_response
    caffeine:
      spec: maximumSize=1000,expireAfterWrite=3600s # Caffeine 缓存配置

  # JSON 配置
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: Asia/Shanghai
    serialization:
      write-dates-as-timestamps: false
      fail-on-empty-beans: false
    deserialization:
      fail-on-unknown-properties: false
    default-property-inclusion: non_null

  # 文件上传配置
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB
      file-size-threshold: 0

  # 国际化配置
  messages:
    basename: i18n/messages
    encoding: UTF-8
    fallback-to-system-locale: false

  # 任务执行配置
  task:
    execution:
      pool:
        core-size: 10
        max-size: 100
        queue-capacity: 100
        keep-alive: 60s

# Swagger 配置
springdoc:
  api-docs:
    path: /api-docs
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    try-it-out-enabled: true
    operations-sorter: method
    tags-sorter: alpha
    doc-expansion: none
    filter: true
    display-request-duration: true
  show-actuator: false
  default-produces-media-type: application/json
  default-consumes-media-type: application/json

# 日志配置
# https://docs.spring.io/spring-boot/reference/features/logging.html
logging:
  level:
    root: INFO
    web: INFO
    sql: ERROR
    com.example.demo: DEBUG
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.cache: DEBUG
    org.springframework.data.redis: DEBUG
  # 设置日志滚动的各项设置：文件大小、历史文件数量、总大小限制，以及日志滚动时的文件名格式
  logback:
    rollingpolicy:
      max-file-size: 50MB
      max-history: 30
      total-size-cap: 50GB
      file-name-pattern: ${logging.file.path}/${spring.application.name}-%d{yyyy-MM-dd}.%i.log
  # 日志文件保存路径及名称设置
  file:
    name: ${spring.application.name}.log
    # TODO 这里似乎没有起到作用，日志文件默认输出到了项目根目录
    path: ./logs
  # MDC 支持，日志中包含请求 ID 和用户 ID
  # TODO 如果使用下面自定义的 pattern，在 IDEA 里查看的日志文件中有很多 ESC 占位符，不知道怎么回事
#  pattern:
#    console: "%clr(%d{HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %clr(%X{mdc}){green} %m%n%wEx"
#    file: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx"

## 应用信息
app:
  data-location: ${APP_DATA_LOCATION:./data}  # 应用数据存储位置
  security:
    # JWT 配置
    jwt:
      secret: ${JWT_SECRET:myVerySecureSecretKeyThatIsAtLeast32CharactersLong123456789}
      issuer: ${JWT_ISSUER:${spring.application.name}}
      expiration: 1d  # 1 天